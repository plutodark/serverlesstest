name: CI

on:
  pull_request:
    branches:
      - '*'
#  push:
#    branches-ignore:
#      - staging
#      - production

jobs:
  serverless-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'
    - name: Install Serverless Framework
      run: npm install -g serverless
    - name: Cache yarn dependencies
      uses: actions/cache@v2
      id: yarn-cache
      with:
        path: |
          ${{ steps.yarn-cache-dir-path.outputs.dir }}
          **/node_modules
        key: our-cache-yarn-${{ hashFiles('**/yarn.lock.json') }}
    - name: Install packages
      if: steps.yarn-cache.outputs.cache-hit != 'true'
      run: yarn
    - name: Set Staging name
      id: set-staging-name
      run: |
        if [[  $GITHUB_REF_NAME  == "staging" || $GITHUB_REF_NAME == "production" ]]; then
          echo "::set-output name=branch-name::$GITHUB_REF_NAME"
        else
          echo "::set-output name=branch-name::${{ github.event.pull_request.number }}"
        fi
    - name: Set AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2
    - name: Deploy to Serverless
      run: serverless deploy --stage ${{ steps.set-staging-name.outputs.branch-name }}

  remove-deployment:
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && github.ref != 'refs/heads/staging' && github.ref != 'refs/heads/production'
    runs-on: ubuntu-latest
    steps:
    - name: Install Serverless Framework
      run: npm install -g serverless
    - name: Remove deployment from Serverless
      run: serverless remove --stage ${{github.event.pull_request.number}}
      # - name: serverless deploy
      # - uses: serverless/github-action@v3.2
      #  with:
      #    args: deploy
      #  env:
          # or if using AWS credentials directly
          # AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          # AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      # - run: npm ci
        #uses: borales/actions-yarn@v4
        #with:
        #  cmd: install # will run `yarn install` command
      #- name: serverless deploy
      #  uses: serverless/github-action@v3.2
      #  with:
      #    args: deploy
      #  env:
      #    SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
        # or if using AWS credentials directly
        # AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        # AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#    steps:
#      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
#      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
#      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
#      - name: Check out repository code
#        uses: actions/checkout@v3
#      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
#      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
#      - name: List files in the repository
#        run: |
#          ls ${{ github.workspace }}
#      - run: echo "üçè This job's status is ${{ job.status }}."
