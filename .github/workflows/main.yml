name: CI

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - staging
      - production
  pull_request_target:
    branches-ignore:  
      - staging
      - production
    types:
      - closed

jobs:
  serverless-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'
#    - name: Install Serverless Framework
#      run: npm install -g serverless
#    - name: Cache yarn dependencies
#      uses: actions/cache@v2
#      id: yarn-cache
#      with:
#        path: |
#          ${{ steps.yarn-cache-dir-path.outputs.dir }}
#          **/node_modules
#        key: our-cache-yarn-${{ hashFiles('**/yarn.lock.json') }}
#    - name: Install packages
#      if: steps.yarn-cache.outputs.cache-hit != 'true'
#      run: yarn
    - name: Set Staging name
      id: set-staging-name
      run: |
        if [[  $GITHUB_REF_NAME  == "staging" || $GITHUB_REF_NAME == "production" ]]; then
          echo "STAGE=$GITHUB_REF_NAME" >> "$GITHUB_ENV"
        else
          echo "STAGE=${{github.event.pull_request.number}}" >> "$GITHUB_ENV"
        fi
    - name: Echo $STAGE
      run: echo "${{ env.STAGE }}"
#    - name: Set AWS credentials
#      uses: aws-actions/configure-aws-credentials@v2
#      with:
#        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        aws-region: eu-west-2
  #  - name: Deploy to Serverless
  #    run: serverless deploy --stage $STAGE
      #run: serverless deploy --stage ${{ env.STAGE }}

  staging-post-deployment:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
    - name: Echo PR number
      run: echo "${{ github.event.pull_request.number }}"
    - name: Echo github event name
      run: echo "${{ github.event_name }}"
  
  close-pr:
    steps:
    - name: Echo github.pull_request_target
      run: echo "${{ github.pull_request_target }}"
    - name: Echo github.pull_request_target.types
      run: echo "${{ github.pull_request_target.types }}"
      
  remove-deployment:
    # if: github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.ref != 'refs/heads/staging' && github.ref != 'refs/heads/production'
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.ref != 'refs/heads/staging' && github.ref != 'refs/heads/production'
    runs-on: ubuntu-latest
    steps:
    
    - name: Echo pull request
      run: echo "${{ github.event.pull_request.number }}"
   # - name: Install Serverless Framework
   #   run: npm install -g serverless
   # - name: Remove deployment from Serverless
   #   run: serverless remove --stage ${{github.event.pull_request.number}}

